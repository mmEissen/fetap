name: Deploy Server

on: 
  push:
    branches: ["main"]

jobs:
  baresip_step_1:
    strategy:
      matrix:
        include:
          - service-name: baresip
            directory: device
            target: step1
    runs-on: ubuntu-24.04-arm
    name: &baresip_name Build and Push baresip (${{ matrix.target }})
    permissions: &baresip_permissions
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps: &baresip_steps
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check if files changed
        uses: marceloprado/has-changed-path@v1.0.1
        id: service-changed
        with:
          paths: device/baresip .github/workflows

      - name: Log in to Docker Hub
        if: steps.service-changed.outputs.changed == 'true'
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        if: steps.service-changed.outputs.changed == 'true'
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./device/baresip
          file: ./device/baresip/Dockerfile
          target: ${{ matrix.target }}
          push: true
          tags: mmeissen/baresip:${{ matrix.target }}

  baresip_step_2:
    strategy:
      matrix:
        include:
          - target: step2
    runs-on: rpi-zero-2w
    needs: baresip_step_1
    name: *baresip_name
    permissions: *baresip_permissions
    steps: *baresip_steps
  
  baresip_step_3:
    strategy:
      matrix:
        include:
          - target: step3
    runs-on: ubuntu-24.04-arm
    needs: baresip_step_2
    name: *baresip_name
    permissions: *baresip_permissions
    steps: *baresip_steps
  
  baresip_step_4:
    strategy:
      matrix:
        include:
          - target: step4
    runs-on: rpi-zero-2w
    needs: baresip_step_3
    name: *baresip_name
    permissions: *baresip_permissions
    steps: *baresip_steps
  
  baresip_step_5:
    strategy:
      matrix:
        include:
          - target: latest
    runs-on: ubuntu-24.04-arm
    needs: baresip_step_4
    name: *baresip_name
    permissions: *baresip_permissions
    steps: *baresip_steps

  build_docker_images:
    strategy:
      matrix:
        include:
          - service-name: fetap-core
            directory: device
          - service-name: fetap-config-server
            directory: device
          - service-name: fetap-nginx
            directory: server
          - service-name: fetap-server
            directory: server
          - service-name: fetap-certbot
            directory: server
          - service-name: fetap-asterisk
            directory: server
    runs-on: ubuntu-24.04-arm
    name: Build and push ${{ matrix.service-name }}
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check if files changed
        uses: marceloprado/has-changed-path@v1.0.1
        id: service-changed
        with:
          paths: ${{ matrix.directory }}/${{ matrix.service-name }}

      - name: Log in to Docker Hub
        if: steps.service-changed.outputs.changed == 'true'
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        if: steps.service-changed.outputs.changed == 'true'
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./${{ matrix.directory }}/${{ matrix.service-name }}
          file: ./${{ matrix.directory }}/${{ matrix.service-name }}/Dockerfile
          push: true
          tags: mmeissen/${{ matrix.service-name }}:latest,mmeissen/${{ matrix.service-name }}:${{ github.sha }}

  # deploy_server:
  #   needs: [build_docker_images]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
      
  #     - name: Check if files changed
  #       uses: marceloprado/has-changed-path@v1.0.1
  #       id: server-changed
  #       with:
  #         paths: server .github/workflows/server-build-docker.yml

  #     - name: Copy docker-compose.yml
  #       if: steps.server-changed.outputs.changed == 'true'
  #       uses: appleboy/scp-action@v0.1.7
  #       with:
  #         host: fetap.net
  #         username: momo
  #         key: ${{ secrets.SERVER_SSH_KEY }}
  #         source: "server/docker-compose-prod.yml,server/authorized_keys"
  #         target: /home/momo/usb2/server
  #         rm: true
  #         strip_components: 1

  #     - name: Deploy via ssh
  #       if: steps.server-changed.outputs.changed == 'true'
  #       uses: appleboy/ssh-action@v1.2.0
  #       with:
  #         host: fetap.net
  #         username: momo
  #         key: ${{ secrets.SERVER_SSH_KEY }}
  #         script: |
  #           cd /home/momo/usb2/server
  #           mv -f authorized_keys /home/momo/.ssh/authorized_keys
  #           docker compose -f docker-compose-prod.yml down
  #           docker compose -f docker-compose-prod.yml pull --quiet
  #           docker compose -f docker-compose-prod.yml up -d --force-recreate --remove-orphans
  #           docker system prune --all --force
  #         command_timeout: 30m